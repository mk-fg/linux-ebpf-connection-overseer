## This configuration file can be empty, as all values have their defaults.
## It's an ini file, with "<key> = <value>" lines under "[<section-name>]" headers,
##  where space-separated values can continue onto next line if space-prefixed,
##  and #-comments, where # must either start the line or be separated by spaces if inline.
## Value examples below are NOT defaults, see "Conf" at the top of widget.nim for those.
## All offset/size units are window/screen pixels.

[window]
title = LECO Network-Monitor Widget Test
init-offset-left = 450
init-offset-top = 40
init-width = 800 # window might get resized by WM/DE
init-height = 1000
#pad-x = 8 # pad around window edges
#pad-y = 8

# frames-per-second-max: SDL should vsync-cap fps to display refresh rate.
# This option allows to add delays to lower the number of updates, with 0 = cap to display.
# Using <1 fractional value like e.g. 0.25 would mean "refresh once in 4 seconds".
# Can also be used with e.g. SDL_VIDEODRIVER=dummy which don't support vsync.
#frames-per-second-max = 0

# rgba_*: colors for background and foreground text, as 8-hex-digit RGBA bytes.
# Background can be (semi-)transparent (last byte <ff) to make window see-through.
#rgba_bg = 000c0866
#rgba_fg = ffffffff

# flags: SDL3 window flags - https://wiki.libsdl.org/SDL3/SDL_WindowFlags
# Defaults: resizable not_focusable borderless transparent utility
# Other flags: always_on_top fullscreen minimized maximized
flags = always_on_top resizable not_focusable borderless transparent utility

# hints: key=value for SDL3 hints - https://wiki.libsdl.org/SDL3/CategoryHints
# Can also be set via SDL_HINT_* env vars. None are set by default.
# Setting override_redirect=1 on X11 makes window ignore/ignored-by everything - good for overlay.
# Supported hints here: override_redirect vsync no_signal_handlers
#  activate_when_raised activate_when_shown display_priority wayland_scale_to_display
hints = override_redirect=1


[text]
# font: if unset, output of [ fc-match -f '%{file}' sans:lang=en ] is used
font = ~/.local/share/fonts/ampire.ttf
font-height = 20

# line-height: can be either dot-number like 1.5 to use xN of font-size,
#  or +N like +10 for exact 10-pixel gap in-between lines, or an integer for pixel line height.
# Should be set to fit underline/overline features of the font and have gaps in-between lines.
line-height = 1.5

# line-fade-time: seconds to animate opacity of a specific connection line after activity.
# By default it's a "fade out" animation - transition from full 100% opacity to 0%
#  (i.e. full transparency) for the info line, and can be changed via line-fade-curve option.
# Restarts on new activity, i.e. when text of that connection-line gets updated.
line-fade-time = 200

# line-fade-curve: (time, opacity) points for cardinal curve for opacity change over time.
# This can define e.g. a fade-in or fade-out, some combination of both, flashing, etc.
# Should be any even number of space or comma-separated integer values, where each pair
#  is interpreted as an (x,y) point, with natural cubic spline in-between (easing transition).
# First and last points define which value would be considered 100% and 0% wrt time and opacity,
#  i.e. if first point is (567,9999) and last one is (839,123), then transition starts at 567
#  and ends at 839 (with linear time scale in-between), and opacity (RGBA pixel alpha value)
#  has linear scale with 123-9999 range, 123 there being 0% and 9999=100%.
# Special extra "range=N:M" can be added to the list to set opacity scale range manually instead.
# Use spline-editor.html in browser to generate/place/see any number of curve points interactively.
# Default is a simple "0,100 100,0" linear fade for pixel alpha channel values.
line-fade-curve = range=0:100 0,41 2,62 4,80 6,94 18,98 58,100 97,84 161,67
  270,63 340,60 395,48 560,46 645,45 715,43 774,31 834,27 902,24 953,17 994,11

# line-uid-*: tweaks for colored siphash-based tags on the left of the connection info.
#line-uid-chars = 3
#line-uid-fmt = [$1]


[run]
# fifo: FIFO socket (as in "man mkfifo") used by leco-event-pipe script for its output.
# Events there should be encoded as json-lines, readable via simple "cat input.fifo".
# Required to be either set here or on the command line, in order for this tool to run.
# Can be initially missing/inaccessible, tool will wait for it.
#fifo = ~/.leco.fifo

# conn-list-cache: how many last connection infos to cache to fill the window on e.g. resize.
#conn-list-cache = 200

#debug = yes # can also be toggled with -d/--debug command-line option


[rx-proc]
# PCRE "<regexp> = <replace>" to modify (match/replace) contents of every displayed line.
# Regexp is on the left as key, replacement with $1, $2, etc groups on the right as value.
# All applied to each line in the same order, replace all matches, case-insensitive by default.
# Can optionally be wrapped into "<flags>/.../" with "I/.../" for a case-sensitive lookup.
#  Wrapped re's can also be joined by " && " and negated by "!/.../" flag, e.g.: /rx1/ && !/rx2/
# Replacement can have "<flags>`<replacement>" format (with backtick separator in there),
#  with "g" flag to also group by replacement(s) (see rx-group below), or a digit to pick regexp
#  out of &&-joined ones to replace (default - last non-negated), e.g. "2`..." for second one.
#  Can start or end with \ (backslash) to keep leading/trailing spaces.

# Use local endpoint info (if enabled) to make localhost connections nicer
:: (.*?) :: (127\.0\.0\.1|::1) (\d{1,4}(/\w+)?) :: (127\.0\.0\.1|::1) [3456]\d{4}(/\w+)? :: = g`:: $1 :: lo.srv $3 ::
:: (.*?) :: (127\.0\.0\.1|::1) \d{1,4}(/\w+)? :: (127\.0\.0\.1|::1) (\d+(/\w+)?) :: = :: $1 :: lo $5 ::
:: (.*?) :: (127\.0\.0\.1|::1) \d{5}(/\w+)? :: (127\.0\.0\.1|::1) \d{5}(/\w+)? :: = g`:: $1 :: lo-conn ::
:: (.*?) :: (127\.0\.0\.1|::1) (\d+) :: (127\.0\.0\.1|::1) (\d+) :: = :: $1 :: lo $3-$5 ::

:: [a-f\d.:]+ \d+(/\w+)? (:: [a-f\d.:]+ \d+(/\w+)? ::) = $2 # strip local endpoint info, if enabled

:: ::FFFF: = :: \ # strip IPv4-mapped-IPv6 address prefix
\ \[tmux-spawn-\S+\] :: = \ [tmux] :: # shorten long cgroup names
\ \[app-flatpak-(\S+)-\d+\] :: = \ [$1] :: # strip cgroup app-flatpak- prefix and instance suffix
^(\s*\S+ ::) fraggod :: = $1 # only keep usernames other than default local one
:: (127\.0\.0\.1|::1) (\d+) :: = :: lo $2 ::

:: (socket thread |([^:]+ ))\[waterfox\] :: = g`:: $2waterfox ::
:: (.*) \[chrome\] :: = g`:: $1 chrome ::
:: emacs :: 10\.2\.0\.1 6667 :: = g`:: emacs :: ZNC IRC ::
:: ssh \[tmux\] :: 10\.2\.0\.1 22 :: = g`:: sshfs.local ::
:: (opener|demux) \[mpv-urls\] :: = g`:: mpv-urls ::
:: tremc( \[tmux\])? :: 10\.48\.4\.3 8198 :: = g`:: tremc ::
:: nodpi-\S+ \[nodpi-https-proxy\] :: = g`:: nodpi-proxy ::
:: (\S+) \[media\.twitch_vod_fe\+\] :: = g`:: $1 [tvf] ::
:: \bsystemd-times\w+ :: \S+( \[systemd-times\w+\])? :: = g`:: sd-ntp ::

:: ([^:]+) :: (\S+) 53/udp :: = g`:: $1 :: $2 DNS :: # group short-lived udp-dns queries
:: 10\.2\.0\.1 DNS :: = :: dns.local ::
:: (0\.0\.0\.0 )?0/x :: = :: icmp.raw ::


[rx-group]
# PCRE regexps to group multiple displayed lines and treat those as the same one.
# Same regexp-replacement key-values as in [rx-proc], but stops on first match,
#  and replacement is not displayed - used as a "slot key" instead,
#  with same-key lines replacing each other one the same line/slot of the window.
# Special-case empty resulting group (nothing after =) will drop/hide matched lines.
# These regexps match original lines, before and without [rx-proc] replacements.
# Use to group e.g. multiple conns from/to same noisy process (like browser) into same slot,
#  which can flicker with different connection info, as those get updates separately.
#  Regexps in [rx-proc] section can minimize that by e.g. making them look more samey.
# Similar to using "g`..." grouping flag for replacements in [rx-proc] section.

.*:: (feh-ext|(\S+) \[feh-screen\])? ::.* = feh-ext $2
.*:: yt-dlp( \[\S+\])? ::.* = yt-dlp $1 # separate for diff tmux sessions
.*:: aria2c( \[\S+\])? ::.* = aria2c $1
